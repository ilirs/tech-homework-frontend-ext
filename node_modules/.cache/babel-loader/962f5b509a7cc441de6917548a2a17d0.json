{"ast":null,"code":"var _jsxFileName = \"/Users/ilirs/Desktop/task ff/tech-homework-frontend-ext/src/components/Sidebar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\nimport PropTypes from 'prop-types';\nimport ResourceItem from 'components/ResourceItem';\nimport Drawer from 'components/Drawer';\nimport pois from 'data/pois.json';\nimport storeIcon from 'assets/icons/store-online.png';\nimport menuIcon from \"assets/icons/menu.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100vh;\n  overflow: scroll;\n  min-width: 350px;\n`;\n_c = StyledSidebar;\nconst StyledSidebarTitle = styled.div`\n  font-size: 24px;\n  min-height: 72px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n`;\n_c2 = StyledSidebarTitle;\nconst StyledSidebarContainer = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  padding-left: 12px;\n  padding-right: 24px;\n  justify-content: space-between;\n`;\n_c3 = StyledSidebarContainer;\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    title,\n    setIsDrawerOpen,\n    isDrawerOpen,\n    zoomIntoStore\n  } = _ref;\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 1224px)'\n  });\n  const itemList = useMemo(() => pois.map((p, index) => /*#__PURE__*/_jsxDEV(ResourceItem, {\n    title: p.name,\n    description: p.brand,\n    imageUrl: storeIcon,\n    size: \"md\",\n    onClick: () => zoomIntoStore(p)\n  }, `item-${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this)), [zoomIntoStore]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledSidebar, {\n      \"data-testid\": \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(StyledSidebarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledSidebarTitle, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), isTabletOrMobile && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: menuIcon,\n          width: 24,\n          height: 24,\n          onClick: () => setIsDrawerOpen(true),\n          alt: \"menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !isTabletOrMobile && itemList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isDrawerOpen,\n      closeDrawer: () => setIsDrawerOpen(false),\n      children: itemList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"gwYmA99XxncoU5bf7TFm/duHaS0=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c4 = Sidebar;\nSidebar.propTypes = {\n  title: PropTypes.string,\n  openDrawer: PropTypes.func\n};\nexport default Sidebar;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledSidebar\");\n$RefreshReg$(_c2, \"StyledSidebarTitle\");\n$RefreshReg$(_c3, \"StyledSidebarContainer\");\n$RefreshReg$(_c4, \"Sidebar\");","map":{"version":3,"names":["React","useMemo","styled","useMediaQuery","PropTypes","ResourceItem","Drawer","pois","storeIcon","StyledSidebar","div","StyledSidebarTitle","StyledSidebarContainer","Sidebar","title","setIsDrawerOpen","isDrawerOpen","zoomIntoStore","isTabletOrMobile","query","itemList","map","p","index","name","brand","menuIcon","propTypes","string","openDrawer","func"],"sources":["/Users/ilirs/Desktop/task ff/tech-homework-frontend-ext/src/components/Sidebar/index.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\nimport PropTypes from 'prop-types';\n\nimport ResourceItem from 'components/ResourceItem';\nimport Drawer from 'components/Drawer';\nimport pois from 'data/pois.json';\nimport storeIcon from 'assets/icons/store-online.png';\nimport menuIcon from 'assets/icons/menu.svg';\n\nconst StyledSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100vh;\n  overflow: scroll;\n  min-width: 350px;\n`;\n\nconst StyledSidebarTitle = styled.div`\n  font-size: 24px;\n  min-height: 72px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledSidebarContainer = styled.div`\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  padding-left: 12px;\n  padding-right: 24px;\n  justify-content: space-between;\n`;\n\nconst Sidebar = ({ title, setIsDrawerOpen, isDrawerOpen, zoomIntoStore }) => {\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n\n  const itemList = useMemo(\n    () =>\n      pois.map((p, index) => (\n        <ResourceItem\n          key={`item-${index}`}\n          title={p.name}\n          description={p.brand}\n          imageUrl={storeIcon}\n          size=\"md\"\n          onClick={() => zoomIntoStore(p)}\n        />\n      )),\n    [zoomIntoStore]\n  );\n  return (\n    <>\n      <StyledSidebar data-testid=\"sidebar\">\n        <StyledSidebarContainer>\n          <StyledSidebarTitle>{title}</StyledSidebarTitle>\n          {isTabletOrMobile && (\n            <img\n              src={menuIcon}\n              width={24}\n              height={24}\n              onClick={() => setIsDrawerOpen(true)}\n              alt=\"menu\"\n            />\n          )}\n        </StyledSidebarContainer>\n\n        {!isTabletOrMobile && itemList}\n      </StyledSidebar>\n\n      <Drawer isOpen={isDrawerOpen} closeDrawer={() => setIsDrawerOpen(false)}>\n        {itemList}\n      </Drawer>\n    </>\n  );\n};\n\nSidebar.propTypes = {\n  title: PropTypes.string,\n  openDrawer: PropTypes.func,\n};\n\nexport default Sidebar;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;;AAGA,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,a;AAQN,MAAME,kBAAkB,GAAGT,MAAM,CAACQ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,kB;AAQN,MAAMC,sBAAsB,GAAGV,MAAM,CAACQ,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,sB;;AASN,MAAMC,OAAO,GAAG,QAA6D;EAAA;;EAAA,IAA5D;IAAEC,KAAF;IAASC,eAAT;IAA0BC,YAA1B;IAAwCC;EAAxC,CAA4D;EAC3E,MAAMC,gBAAgB,GAAGf,aAAa,CAAC;IAAEgB,KAAK,EAAE;EAAT,CAAD,CAAtC;EAEA,MAAMC,QAAQ,GAAGnB,OAAO,CACtB,MACEM,IAAI,CAACc,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,kBACP,QAAC,YAAD;IAEE,KAAK,EAAED,CAAC,CAACE,IAFX;IAGE,WAAW,EAAEF,CAAC,CAACG,KAHjB;IAIE,QAAQ,EAAEjB,SAJZ;IAKE,IAAI,EAAC,IALP;IAME,OAAO,EAAE,MAAMS,aAAa,CAACK,CAAD;EAN9B,GACQ,QAAOC,KAAM,EADrB;IAAA;IAAA;IAAA;EAAA,QADF,CAFoB,EAYtB,CAACN,aAAD,CAZsB,CAAxB;EAcA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAe,eAAY,SAA3B;MAAA,wBACE,QAAC,sBAAD;QAAA,wBACE,QAAC,kBAAD;UAAA,UAAqBH;QAArB;UAAA;UAAA;UAAA;QAAA,QADF,EAEGI,gBAAgB,iBACf;UACE,GAAG,EAAEQ,QADP;UAEE,KAAK,EAAE,EAFT;UAGE,MAAM,EAAE,EAHV;UAIE,OAAO,EAAE,MAAMX,eAAe,CAAC,IAAD,CAJhC;UAKE,GAAG,EAAC;QALN;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAcG,CAACG,gBAAD,IAAqBE,QAdxB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE,QAAC,MAAD;MAAQ,MAAM,EAAEJ,YAAhB;MAA8B,WAAW,EAAE,MAAMD,eAAe,CAAC,KAAD,CAAhE;MAAA,UACGK;IADH;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA,gBADF;AAwBD,CAzCD;;GAAMP,O;UACqBV,a;;;MADrBU,O;AA2CNA,OAAO,CAACc,SAAR,GAAoB;EAClBb,KAAK,EAAEV,SAAS,CAACwB,MADC;EAElBC,UAAU,EAAEzB,SAAS,CAAC0B;AAFJ,CAApB;AAKA,eAAejB,OAAf"},"metadata":{},"sourceType":"module"}